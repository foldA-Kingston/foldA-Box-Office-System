"""empty message

Revision ID: 20fab6f594ea
Revises: 
Create Date: 2020-03-04 09:47:04.989947

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '20fab6f594ea'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Purchasable',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('individual', 'dayPass', name='purchasabletypes2'), nullable=False),
    sa.Column('numTickets', sa.Integer(), nullable=False),
    sa.Column('isSoldOut', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('TicketClass',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isAdmin', sa.Boolean(), nullable=False),
    sa.Column('emailAddress', sa.String(), nullable=False),
    sa.Column('createDate', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('birthDate', sa.Date(), nullable=True),
    sa.Column('association', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('emailAddress'),
    sa.UniqueConstraint('isAdmin')
    )
    op.create_table('Event',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('artistName', sa.String(), nullable=True),
    sa.Column('imageUrl', sa.String(), nullable=True),
    sa.Column('embedMedia', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('startTime', sa.DateTime(), nullable=False),
    sa.Column('endTime', sa.DateTime(), nullable=False),
    sa.Column('venue', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('isFull', sa.Boolean(), nullable=False),
    sa.Column('purchasable_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['purchasable_id'], ['Purchasable.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('FeedbackQuestion',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('purchasable_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['purchasable_id'], ['Purchasable.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Purchasable_TicketClass',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('purchasable_id', sa.Integer(), nullable=False),
    sa.Column('ticketClass_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['purchasable_id'], ['Purchasable.id'], ),
    sa.ForeignKeyConstraint(['ticketClass_id'], ['TicketClass.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Ticket',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isPurchased', sa.Boolean(), nullable=False),
    sa.Column('createDate', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('purchaseDate', sa.DateTime(), nullable=True),
    sa.Column('purchasable_id', sa.Integer(), nullable=False),
    sa.Column('ticketClass_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['purchasable_id'], ['Purchasable.id'], ),
    sa.ForeignKeyConstraint(['ticketClass_id'], ['TicketClass.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Event_Ticket',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['Event.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['Ticket.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('FeedbackAnswer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('response', sa.String(), nullable=False),
    sa.Column('feedbackQuestion_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['feedbackQuestion_id'], ['FeedbackQuestion.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('FeedbackAnswer')
    op.drop_table('Event_Ticket')
    op.drop_table('Ticket')
    op.drop_table('Purchasable_TicketClass')
    op.drop_table('FeedbackQuestion')
    op.drop_table('Event')
    op.drop_table('User')
    op.drop_table('TicketClass')
    op.drop_table('Purchasable')
    # ### end Alembic commands ###
